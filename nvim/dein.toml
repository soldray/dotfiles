[[plugins]]
name = 'utility/dein'
repo = 'Shougo/dein.vim'

[[plugins]]
name = 'utility/nvim-web-devicons'
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
name = 'utility/nvim-tree'
repo = 'kyazdani42/nvim-tree.lua'
hook_add = '''
lua << EOF
require'nvim-tree'.setup {
  disable_netrw = true,
  hijack_netrw = true,
  --- open_on_setup = true,

  view = {
    width = 36,
    relativenumber = true,
  },

  actions = {
    open_file = {
      resize_window = true,
    },
  },

  renderer = {
    icons = {
      webdev_colors = true,
      git_placement = "before",
    },
  },
}
EOF
'''

[[plugins]]
name = 'utility/lspconfig'
repo = 'neovim/nvim-lspconfig'
hook_add = '''
lua << EOF
local opts = { noremap=true, silent=true }
vim.api.nvim_set_keymap('n', '<space>e', '<cmd>lua vim.diagnostic.open_float()<CR>', opts)
vim.api.nvim_set_keymap('n', '[d', '<cmd>lua vim.diagnostic.goto_prev()<CR>', opts)
vim.api.nvim_set_keymap('n', ']d', '<cmd>lua vim.diagnostic.goto_next()<CR>', opts)
vim.api.nvim_set_keymap('n', '<space>q', '<cmd>lua vim.diagnostic.setloclist()<CR>', opts)

local on_attach = function(client, bufnr)
  vim.api.nvim_buf_set_option(bufnr, 'omnifunc', 'v:lua.vim.lsp.omnifunc')

  vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gD', '<cmd>lua vim.lsp.buf.declaration()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gd', '<cmd>lua vim.lsp.buf.definition()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', 'K', '<cmd>lua vim.lsp.buf.hover()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gi', '<cmd>lua vim.lsp.buf.implementation()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<C-k>', '<cmd>lua vim.lsp.buf.signature_help()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>wa', '<cmd>lua vim.lsp.buf.add_workspace_folder()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>wr', '<cmd>lua vim.lsp.buf.remove_workspace_folder()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>wl', '<cmd>lua print(vim.inspect(vim.lsp.buf.list_workspace_folders()))<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>D', '<cmd>lua vim.lsp.buf.type_definition()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>rn', '<cmd>lua vim.lsp.buf.rename()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>ca', '<cmd>lua vim.lsp.buf.code_action()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gr', '<cmd>lua vim.lsp.buf.references()<CR>', opts)
  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<space>f', '<cmd>lua vim.lsp.buf.formatting()<CR>', opts)
end

local servers = { "clangd", "texlab", "rust_analyzer" }

for _, lsp in pairs(servers) do
  require('lspconfig')[lsp].setup {
    on_attach = on_attach,
    flags = {
      debounce_text_changes = 150,
    }
  }
end
EOF
'''

[[plugins]]
name = 'utility/lsp_signature.nvim'
repo = 'ray-x/lsp_signature.nvim'
hook_add = '''
lua << EOF
require('lsp_signature').setup({
  bind = true,
  handler_opts = { border = 'rounded' },
  hint_prefix = "🐺 "
})
EOF
'''

[[plugins]]
name = 'utility/LuaSnip'
repo = 'L3MON4D3/LuaSnip'
hook_add = '''
imap <silent><expr> <Tab> luasnip#expand_or_jumpable() ? '<Plug>luasnip-expand-or-jump' : '<Tab>' 

lua << EOF
require("luasnip.loaders.from_snipmate").lazy_load()
EOF
'''

[[plugins]]
name = 'utility/rust.vim'
repo = 'rust-lang/rust.vim'

[[plugins]]
name = 'utility/vimtex'
repo = 'lervag/vimtex'

[[plugins]]
name = 'utility/nvim-treesitter'
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
lua << EOF
require'nvim-treesitter.configs'.setup {
  ensure_installed = { "c", "cpp", "rust" },
  sync_install = true,

  highlight = {
    enable = true,
    additional_vim_regex_highlighting = false,
  },
}
EOF
'''

[[plugins]]
name = 'visual/vim-airline'
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
'''

[[plugins]]
name = 'visual/plastic.vim'
repo = 'flrnd/plastic.vim'
hook_add = '''
colorscheme plastic
'''

[[plugins]]
name = 'visual/indentLine'
repo = 'Yggdroot/indentLine'
hook_add = '''
let g:indentLine_char = '│'
let g:indentLine_setConceal = 1
'''

[[plugins]]
name = 'visual/vim-devicons'
repo = 'ryanoasis/vim-devicons'
